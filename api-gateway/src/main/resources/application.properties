spring.application.name=api-gateway
server.port=${PORT:8080}

# Eureka client
eureka.client.service-url.defaultZone=http://${EUREKA_CLIENT:localhost:8761}/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# Log
logging.level.root=info
logging.level.org.springframework.cloud.gateway=debug
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=info

# TypeOfUSer
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/typeofuser/**

# User
spring.cloud.gateway.routes[1].id=user-service
spring.cloud.gateway.routes[1].uri=lb://user-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/users/**

# Client
spring.cloud.gateway.routes[2].id=client-service
spring.cloud.gateway.routes[2].uri=lb://client-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/clients/**

# Partner
spring.cloud.gateway.routes[3].id=partner-service
spring.cloud.gateway.routes[3].uri=lb://partner-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/partners/**

# Product
spring.cloud.gateway.routes[4].id=product-service
spring.cloud.gateway.routes[4].uri=lb://product-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/products/**

# Inventory
spring.cloud.gateway.routes[5].id=inventory-service
spring.cloud.gateway.routes[5].uri=lb://inventory-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/inventory/**

# Dispatch
spring.cloud.gateway.routes[6].id=dispatch-service
spring.cloud.gateway.routes[6].uri=lb://dispatch-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/dispatches/**

# Dispatch
spring.cloud.gateway.routes[7].id=order-service
spring.cloud.gateway.routes[7].uri=lb://order-service
spring.cloud.gateway.routes[7].predicates[0]=Path=/api/order-details/**

# Dispatch
spring.cloud.gateway.routes[8].id=order-service
spring.cloud.gateway.routes[8].uri=lb://order-service
spring.cloud.gateway.routes[8].predicates[0]=Path=/api/orders/**

# TypeOfUSer y User
spring.cloud.gateway.routes[9].id=user-service
spring.cloud.gateway.routes[9].uri=lb://user-service
spring.cloud.gateway.routes[9].predicates[0]=Path=/api/auth/**

# Configuración del servidor
server.servlet.context-path=/

# Configuración de Springdoc OpenAPI
springdoc.enable-native-support=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.config-url=/v3/api-docs/swagger-config

# Configuración de URLs para múltiples servicios
springdoc.swagger-ui.urls[0].url=/v3/api-docs
springdoc.swagger-ui.urls[0].name=api-gateway
springdoc.swagger-ui.urls[0].display-name=api-gateway

springdoc.swagger-ui.urls[1].url=/client-service/v3/api-docs
springdoc.swagger-ui.urls[1].name=client-service
springdoc.swagger-ui.urls[1].display-name=client-service

springdoc.swagger-ui.urls[2].url=/dispatch-service/v3/api-docs
springdoc.swagger-ui.urls[2].name=dispatch-service
springdoc.swagger-ui.urls[2].display-name=dispatch-service

springdoc.swagger-ui.urls[3].url=/inventory-service/v3/api-docs
springdoc.swagger-ui.urls[3].name=inventory-service
springdoc.swagger-ui.urls[3].display-name=inventory-service

springdoc.swagger-ui.urls[4].url=/order-service/v3/api-docs
springdoc.swagger-ui.urls[4].name=order-service
springdoc.swagger-ui.urls[4].display-name=order-service

springdoc.swagger-ui.urls[5].url=/partner-service/v3/api-docs
springdoc.swagger-ui.urls[5].name=partner-service
springdoc.swagger-ui.urls[5].display-name=partner-service

springdoc.swagger-ui.urls[6].url=/product-service/v3/api-docs
springdoc.swagger-ui.urls[6].name=product-service
springdoc.swagger-ui.urls[6].display-name=product-service

springdoc.swagger-ui.urls[7].url=/user-service/v3/api-docs
springdoc.swagger-ui.urls[7].name=user-service
springdoc.swagger-ui.urls[7].display-name=user-service

## spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
## spring.cloud.gateway.globalcors.corsConfigurations[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations[/**].allowedMethods=*
spring.cloud.gateway.globalcors.corsConfigurations[/**].allowedHeaders=*

spring.main.web-application-type=reactive
spring.main.allow-bean-definition-overriding=true